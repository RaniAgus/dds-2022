@startuml iteracion-5

class Usuario {
    agregar(guardarropa)
}

Usuario --> "*" Guardarropa

class Guardarropa {
  sugerir() : Atuendo
  solicitar(solicitud)
  getSolicitudesPendientes() : SolicitudModificacion[]
  getSolicitudesAceptadas() : SolicitudModificacion[]
  agregar(prenda)
  quitar(prenda)
}

Guardarropa ..> Atuendo
Guardarropa -right-> "*" Prenda
Guardarropa -right-> ServicioMeteorologico
Guardarropa -left-> "*" SolicitudModificacion

abstract class SolicitudModificacion {
    aceptarEn(guardarropas)
    rechazar()
    deshacerEn(guardarropas)
    {abstract} realizarEn(guardarropas)
    {abstract} revertirEn(guardarropas)
}

SolicitudModificacion ..> Guardarropa
SolicitudModificacion -left-> EstadoModificacion

enum EstadoModificacion {
    PENDIENTE
    ACEPTADA
    RECHAZADA
}

SolicitudModificacion <|-up- SolicitudAgregar
SolicitudModificacion <|-up- SolicitudQuitar

class SolicitudAgregar {
    prenda : Prenda
}

class SolicitudQuitar {
    prenda : Prenda
}

interface ServicioMeteorologico {
    getTemperatura()
}

ServicioMeteorologico ..> Temperatura

ServicioMeteorologico <|.right. AccuWeather

class AccuWeather {
    ultimaActualizacion : LocalDateTime
}

AccuWeather --> Temperatura

enum Temperatura {
    FRIO,
    TEMPLADO,
    CALIDO
    {static} ofCelsius(celsius)
    {static} ofFahrenheit(fahrenheit)
}

abstract UniformeFactory {
  crearUniforme()
  {abstract} getBorradorSuperior()
  {abstract} getBorradorInferior()
  {abstract} getBorradorCalzado()
}

UniformeFactory .right.> Atuendo : <<creates>>
UniformeFactory ..> Borrador
UniformeFactory ..> Borrador
UniformeFactory ..> Borrador

class Atuendo {
   superior
   inferior
   calzado
   accesorio
}

Atuendo --> Prenda
Atuendo --> Prenda
Atuendo --> Prenda
Atuendo --> Prenda

class Borrador {
  conTipo(tipo)
  conMaterial(material)
  conTrama(trama)
  conColorPrimario(colorPrimario)
  conColorSecundario(colorSecundario)
  (...)
  crearPrenda()
}

Borrador .right.> Prenda : <<creates>>

class Prenda {
 colorPrincipal : Color
 colorSecundario : Color
 estaLavandose : boolean
 esDeCategoria(categoria)
 esSugerible()
 esAptaPara(temperatura)
 usar()
 ponerALavar()
 lavar()
}

Prenda -up-> "*" Temperatura : "temperaturasAptas"
Prenda -right-> Tipo
Prenda --> Material
Prenda --> Trama
Prenda --> Estado

enum Material {
  ALGODON,
  CUERO,
  LANA,
  JEAN,
  ...
}

enum Trama {
  LISA,
  RAYADA,
  LUNARES,
  CUADROS,
  ESTAMPADO
}

enum Tipo {
  ANTEOJOS,
  ZAPATOS,
  ...
  esMaterialValido(material)
}

Tipo --> "*" Material
Tipo --> Categoria

enum Categoria {
  CALZADO
  PARTE_SUPERIOR,
  PARTE_INFERIOR,
  ACCESORIO
}

interface Estado {
 esSugerible()
 usar()
 lavar()
}

Estado <|.. Nueva
Estado <|.. Usada
Estado <|.. Sucia
Estado <|.. Percudida

Nueva .right.> Usada
Usada .right.> Sucia
Sucia .left.> Usada
Sucia .right.> Percudida

class Sucia {
  usos : Integer
}

@enduml
